 
/*
    This should behave the same way as the Mux4Way16, with one extra stage of bits.

    0 0 0 a
    0 0 1 b

    0 1 0 c
    0 1 1 d

    1 0 0 e
    1 0 1 f

    1 1 0 g
    1 1 1 h

    Here we have that same 01010101 pattern
*/

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    // First stage of muxes
    Mux16(a=a, b=b, sel=sel[0], out=s0fn1);
    Mux16(a=c, b=d, sel=sel[0], out=s0fn2);
    Mux16(a=e, b=f, sel=sel[0], out=s0fn3);
    Mux16(a=g, b=h, sel=sel[0], out=s0fn4);

    // Second stage, we've cut the field of options in half
    Mux16(a=s0fn1, b=s0fn2, sel=sel[1], out=s0fn5);
    Mux16(a=s0fn3, b=s0fn4, sel=sel[1], out=s0fn6);

    // Third stage, we've halved our options again
    Mux16(a=s0fn5, b=s0fn6, sel=sel[2], out=out);
}