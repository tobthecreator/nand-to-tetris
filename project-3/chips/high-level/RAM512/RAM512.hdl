 

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

// This is just going to be the exact same thing as the RAM64, except made of 64s
CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // 8 RAM64s
    DMux8Way(
        in=load, 
        sel=address[6..8], 
        a=Aload, 
        b=Bload, 
        c=Cload, 
        d=Dload, 
        e=Eload, 
        f=Fload, 
        g=Gload, 
        h=Hload
    );

     // A-D
    RAM64(in=in, load=Aload, address=address[0..5], out=Aout);
    RAM64(in=in, load=Bload, address=address[0..5], out=Bout);
    RAM64(in=in, load=Cload, address=address[0..5], out=Cout);
    RAM64(in=in, load=Dload, address=address[0..5], out=Dout);

    // E-H
    RAM64(in=in, load=Eload, address=address[0..5], out=Eout);
    RAM64(in=in, load=Fload, address=address[0..5], out=Fout);
    RAM64(in=in, load=Gload, address=address[0..5], out=Gout);
    RAM64(in=in, load=Hload, address=address[0..5], out=Hout);

    // Output Mux
    Mux8Way16(
        a=Aout, 
        b=Bout, 
        c=Cout, 
        d=Dout, 
        e=Eout, 
        f=Fout, 
        g=Gout, 
        h=Hout, 
        sel=address[6..8], 
        out=out
    );
}